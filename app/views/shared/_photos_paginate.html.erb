<div id="container" class="container transitions-enabled infinite-scroll clearfix">
  <% @photos.each do |photo| %>


    <div class = "box col2">
      <div class="photo-detail">

        <div class="image-holder" style="height: <%=img_thumb(photo)[:height]%>px;width: 100%; background-image: url(<%= photo.image.thumb.url%>)">
          <div class="functBtns-holder">
            <button class="functBtn">LIKE</button>
            <button class="functBtn">PIN</button>
          </div>
        </div>

        <div class="photo-infos">
          <p><%= photo.description %></p>
          <div class="acts-on-user">
            <a href="#" class="photo-act">100 Likes</a>
            <a href="#" class="photo-act"> 100 Repins</a>
          </div>
        </div>

        <div class="user-attributes">
            <a href="#" class="attr-holder">
              <%= image_tag photo.owner_user.avatar.thumb if !photo.owner_user.avatar.nil?%>
              <% if photo.is_origin? %>
                  <span class="attr-title"> Pinned by </span>
              <%else%>
                  <span class="attr-title"> Repinned by </span>
              <%end%>
              <span class="attr-name"><%= photo.owner_user.name%> </span>
            </a>
            <a href="#" class="attr-holder">
              <%= image_tag photo.image.url %>
              <span class="attr-title"> onto </span>
              <span class="attr-name"> <%=photo.box.title%></span>
            </a>
        </div>

      </div>
    </div>


  <%end%>
  <div style="display: none"><%= will_paginate @photos %></div>
</div>

<script type="text/javascript">

jQuery(function() {                                              // <== Doc ready

    jQuery('.show-image').hover(function() {
      jQuery(this).find('.btn-group').show();         // use .find() !
      }, function() {
      jQuery(this).find('.btn-group').hide();         // use .find() !
      });
    });

var $container = $('#container');

$container.imagesLoaded(function(){
    $container.masonry({
      itemSelector: '.box',
      isFitWidth: true,
      isResizable: true,
      gutterWidth: 10
    });
  });

$container.infinitescroll({
navSelector  : '.next_page',    // selector for the paged navigation
nextSelector : '.next_page a',  // selector for the NEXT link (to page 2)
itemSelector : '.box',         // selector for all items you'll retrieve
loading: {
finishedMsg: 'No more pages to load.',
}
},
// trigger Masonry as a callback
function( newElements ) {
// hide new items while they are loading
var $newElems = $( newElements ).css({ opacity: 0 });
// ensure that images load before adding to masonry layout
$newElems.imagesLoaded(function(){
  // show elems now they're ready
  $newElems.animate({ opacity: 1 });
  $container.masonry( 'appended', $newElems, true );
  });
}
);

$(".image-holder" ).click(function(e) {
  if($(e.toElement).hasClass("image-holder")) {

  }
})
</script>

